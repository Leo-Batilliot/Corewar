name: Check

on:
  push:
    branches-ignore:
      - 'ga-ignore-**'
  pull_request:
    branches-ignore:
      - 'ga-ignore-**'

env:
  MIRROR_URL: "git@github.com:EpitechPGEPromo2029/B-CPE-200-LIL-2-1-corewar-gabin.wilson.git"
  EXECUTABLES: "corewar"

jobs:
  check_coding_style:
    name: Check coding style
    runs-on: ubuntu-latest
    if: github.repository != 'EpitechPGEPromo2029/B-CPE-200-LIL-2-1-corewar-gabin.wilson'
    container:
      image: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Run coding style checker
        run: |
          check.sh $(pwd) $(pwd)
          if [ -s coding-style-reports.log ]; then
            while read -r line; do
              file_path=$(echo "$line" | cut -d: -f1)
              line_number=$(echo "$line" | cut -d: -f2)
              error_type=$(echo "$line" | cut -d: -f3)
              error_message=$(echo "$line" | cut -d: -f4)
              relative_path=$(realpath --relative-to="$(pwd)" "$file_path" 2>/dev/null || echo "$file_path")
              echo "::error file=${relative_path},line=${line_number}::${error_type} coding style error: ${relative_path}:${line_number} - ${error_message}"
            done < coding-style-reports.log
            exit 1
          fi

  check_program_compilation:
    name: Check program compilation
    needs: check_coding_style
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker:latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Run make
        timeout-minutes: 2
        run: make
        
      - name: Run make clean
        run: make clean
        
      - name: Check executables
        run: |
          for exec in $(echo "$EXECUTABLES" | tr ',' ' '); do
            if [ ! -f "$exec" ]; then
              echo "::error file=${exec}::Executable '$exec' not found"
              exit 1
            fi
            if [ ! -x "$exec" ]; then
              echo "::error file=${exec}::File '$exec' is not executable"
              exit 1
            fi
            echo "Executable '$exec' found and is executable"
          done

  run_tests:
    name: Run tests
    needs: check_program_compilation
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker:latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Run tests
        timeout-minutes: 2
        run: make tests_run

  mirror_repository:
    name: Mirror repository to Epitech
    needs: run_tests
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Push to mirror
        uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url: ${{ env.MIRROR_URL }}
          ssh_private_key: ${{ secrets.MIRROR_SSH_KEY }}